% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggcall.R
\name{ggcall}
\alias{ggcall}
\title{Generate code to create a \code{ggplot2}}
\usage{
ggcall(
  data = NULL,
  mapping = NULL,
  geom = NULL,
  geom_args = list(),
  scales = NULL,
  scales_args = list(),
  coord = NULL,
  labs = list(),
  theme = NULL,
  theme_args = list(),
  facet = NULL,
  facet_row = NULL,
  facet_col = NULL,
  facet_args = list(),
  xlim = NULL,
  ylim = NULL
)
}
\arguments{
\item{data}{Character. Name of the \code{data.frame}.}

\item{mapping}{List. Named list of aesthetics.}

\item{geom}{Character. Name of the geom to use (with or without "geom_").}

\item{geom_args}{List. Arguments to use in the geom.}

\item{scales}{Character vector. Scale(s) to use (with or without "scale_").}

\item{scales_args}{List. Arguments to use in scale(s),
if \code{scales} is length > 1, must be a named list with \code{scales} names.}

\item{coord}{Character. Coordinates to use (with or without "coord_").}

\item{labs}{List. Named list of labels to use for title, subtitle, x & y axis, legends.}

\item{theme}{Character. Name of the theme to use (with or without "theme_").}

\item{theme_args}{Named list. Arguments for \code{\link[ggplot2:theme]{theme}}.}

\item{facet}{Character vector. Names of variables to use in \code{\link[ggplot2]{facet_wrap}}.}

\item{facet_row}{Character vector. Names of row variables to use in \code{\link[ggplot2]{facet_grid}}.}

\item{facet_col}{Character vector. Names of col variables to use in \code{\link[ggplot2]{facet_grid}}.}

\item{facet_args}{Named list. Arguments for \code{\link[ggplot2:facet_wrap]{facet_wrap}}.}

\item{xlim}{A vector of length 2 representing limits on x-axis.}

\item{ylim}{A vector of length 2 representing limits on y-axis.}
}
\value{
a \code{call} that can be evaluated with \code{eval}.
}
\description{
Generate code to create a \code{ggplot2}
}
\examples{
# Default:
ggcall()

# With data and aes
ggcall("mtcars", list(x = "mpg", y = "wt"))

# Evaluate the call
library(ggplot2)
eval(ggcall("mtcars", list(x = "mpg", y = "wt")))


# With a geom:
ggcall(
  data = "mtcars",
  mapping = list(x = "mpg", y = "wt"),
  geom = "point"
)

# With options
ggcall(
  data = "mtcars",
  mapping = list(x = "hp", y = "cyl", fill = "color"),
  geom = "bar",
  coord = "flip",
  labs = list(title = "My title"),
  theme = "minimal",
  facet = c("gear", "carb"),
  theme_args = list(legend.position = "bottom")
)

# Theme
ggcall(
  "mtcars", list(x = "mpg", y = "wt"),
  theme = "theme_minimal",
  theme_args = list(
    panel.ontop = TRUE,
    legend.title = rlang::expr(element_text(face = "bold"))
  )
)

# Theme from other package than ggplot2
ggcall(
  "mtcars", list(x = "mpg", y = "wt"),
  theme = "ggthemes::theme_economist"
)


# One scale
ggcall(
  data = "mtcars",
  mapping = list(x = "mpg", y = "wt", color = "qsec"),
  geom = "point",
  scales = "color_distiller",
  scales_args = list(palette = "Blues")
)

# Two scales
ggcall(
  data = "mtcars",
  mapping = list(x = "mpg", y = "wt", color = "qsec", size = "qsec"),
  geom = "point",
  scales = c("color_distiller", "size_continuous"),
  scales_args = list(
    color_distiller = list(palette = "Greens"),
    size_continuous = list(range = c(1, 20))
  )
)
}
